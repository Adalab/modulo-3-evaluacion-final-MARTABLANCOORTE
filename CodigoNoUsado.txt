// Funci贸n para aplicar el filtro por nombre
  /*const applyFilterName = (filterCharacter) => {
    if (filterCharacter) {
      const CharacterfilteredbyName = characterArray.filter((character) =>
        character.name.toLowerCase().includes(filterCharacter.toLowerCase())
      );
      setCharacterArray(CharacterfilteredbyName);
    }
  };


  // Funci贸n para aplicar el filtro Student - Staff - All
  const applyFilterStudent = (filterStudent) => {
    let CharacterfileredbyStatus;

    if (filterStudent === "Students") {
      CharacterfileredbyStatus = characterArray.filter((character) => character.hogwartsStudent);
    } else if (filterStudent === "Staff") {
      CharacterfileredbyStatus = characterArray.filter((character) => character.hogwartsStaff);
    } else {
      CharacterfileredbyStatus = characterArray;
    }
    setCharacterArray(CharacterfileredbyStatus);
  };*/

 // Funci贸n para aplicar el filtro Student - Staff - All
  const applyFilterHouse = (data) => {
    if (filterHouse === "All") {
      return data;
    } else if (filterHouse === "Gryffindor") {
      return data.filter((character) => character.house === "Gryffindor");
    } else if (filterHouse === "Hufflepuff") {
      return data.filter((character) => character.house === "Gryffindor");
    } else if (filterHouse === "Ravenclaw") {
      return data.filter((character) => character.house === "Gryffindor");
    } else if (filterHouse === "Slytherin") {
      return data.filter((character) => character.house === "Gryffindor");
    } else {
      return data;
    }
  };

    // Funci贸n para el filtrofilteredCharacter de genero:
  const applyFilterGender = (data) => {
    if (filterGender === "all") {
      return data;
    } else {
      return data.filter((character) => {
        if (filterGender === "female") {
          return character.gender === "female";
        } else if (filterGender === "male") {
          return character.gender === "male";
        }
      });
    }
  };